man7.org > Linux > man-pages
Linux/UNIX system programming training  
* * *
# git-credential-cache(1) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | OPTIONS | CONTROLLING THE DAEMON | EXAMPLES |
GIT | COLOPHON  
    GIT-CREDENTIAL-CACHE(1)        Git Manual        GIT-CREDENTIAL-CACHE(1)
## NAME         top
           git-credential-cache - Helper to temporarily store passwords in
           memory
## SYNOPSIS         top
           git config credential.helper 'cache [<options>]'
## DESCRIPTION         top
           This command caches credentials for use by future Git programs.
           The stored credentials are kept in memory of the cache-daemon
           process (instead of written to a file) and are forgotten after a
           configurable timeout. Credentials are forgotten sooner if the
           cache-daemon dies, for example if the system restarts. The cache
           is accessible over a Unix domain socket, restricted to the
           current user by filesystem permissions.
           You probably don’t want to invoke this command directly; it is
           meant to be used as a credential helper by other parts of Git.
           See gitcredentials(7) or EXAMPLES below.
## OPTIONS         top
           --timeout <seconds>
               Number of seconds to cache credentials (default: 900).
           --socket <path>
               Use <path> to contact a running cache daemon (or start a new
               cache daemon if one is not started). Defaults to
               $XDG_CACHE_HOME/git/credential/socket unless
               ~/.git-credential-cache/ exists in which case
               ~/.git-credential-cache/socket is used instead. If your home
               directory is on a network-mounted filesystem, you may need to
               change this to a local filesystem. You must specify an
               absolute path.
## CONTROLLING THE DAEMON         top
           If you would like the daemon to exit early, forgetting all cached
           credentials before their timeout, you can issue an exit action:
               git credential-cache exit
## EXAMPLES         top
           The point of this helper is to reduce the number of times you
           must type your username or password. For example:
               $ git config credential.helper cache
               $ git push http://example.com/repo.git
               Username: <type your username>
               Password: <type your password>
               [work for 5 more minutes]
               $ git push http://example.com/repo.git
               [your credentials are used automatically]
           You can provide options via the credential.helper configuration
           variable (this example increases the cache time to 1 hour):
               $ git config credential.helper 'cache --timeout=3600'
## GIT         top
           Part of the git(1) suite
## COLOPHON         top
           This page is part of the git (Git distributed version control
           system) project.  Information about the project can be found at
           ⟨http://git-scm.com/⟩.  If you have a bug report for this manual
           page, see ⟨http://git-scm.com/community⟩.  This page was obtained
           from the project's upstream Git repository
           ⟨https://github.com/git/git.git⟩ on 2023-06-23.  (At that time,
           the date of the most recent commit that was found in the
           repository was 2023-06-22.)  If you discover any rendering
           problems in this HTML version of the page, or you believe there
           is a better or more up-to-date source for the page, or you have
           corrections or improvements to the information in this COLOPHON
           (which is not part of the original manual page), send a mail to
           man-pages@man7.org
    Git 2.41.0.159.g0bfa46         2023-06-22        GIT-CREDENTIAL-CACHE(1)
* * *
Pages that refer to this page: git(1),  git-credential-cache--daemon(1),  git-
credential-store(1),  gitcredentials(7)
* * *
* * *
HTML rendering created 2023-06-24 by Michael Kerrisk, author of The Linux
Programming Interface.
For details of in-depth Linux/UNIX system programming training courses that I
teach, look here.
Hosting by jambit GmbH.  
* * *