man7.org > Linux > man-pages
Linux/UNIX system programming training  
* * *
# hash(1p) -- Linux manual page
PROLOG | NAME | SYNOPSIS | DESCRIPTION | OPTIONS | OPERANDS | STDIN | INPUT
FILES | ENVIRONMENT VARIABLES | ASYNCHRONOUS EVENTS | STDOUT | STDERR | OUTPUT
FILES | EXTENDED DESCRIPTION | EXIT STATUS | CONSEQUENCES OF ERRORS |
APPLICATION USAGE | EXAMPLES | RATIONALE | FUTURE DIRECTIONS | SEE ALSO |
COPYRIGHT  
    HASH(1P)                POSIX Programmer's Manual               HASH(1P)
## PROLOG         top
           This manual page is part of the POSIX Programmer's Manual.  The
           Linux implementation of this interface may differ (consult the
           corresponding Linux manual page for details of Linux behavior),
           or the interface may not be implemented on Linux.
## NAME         top
           hash — remember or report utility locations
## SYNOPSIS         top
           hash [utility...]
           hash -r
## DESCRIPTION         top
           The hash utility shall affect the way the current shell
           environment remembers the locations of utilities found as
           described in Section 2.9.1.1, Command Search and Execution.
           Depending on the arguments specified, it shall add utility
           locations to its list of remembered locations or it shall purge
           the contents of the list. When no arguments are specified, it
           shall report on the contents of the list.
           Utilities provided as built-ins to the shell shall not be
           reported by hash.
## OPTIONS         top
           The hash utility shall conform to the Base Definitions volume of
           POSIX.1‐2017, Section 12.2, Utility Syntax Guidelines.
           The following option shall be supported:
           -r        Forget all previously remembered utility locations.
## OPERANDS         top
           The following operand shall be supported:
           utility   The name of a utility to be searched for and added to
                     the list of remembered locations. If utility contains
                     one or more <slash> characters, the results are
                     unspecified.
## STDIN         top
           Not used.
## INPUT FILES         top
           None.
## ENVIRONMENT VARIABLES         top
           The following environment variables shall affect the execution of
           hash:
           LANG      Provide a default value for the internationalization
                     variables that are unset or null. (See the Base
                     Definitions volume of POSIX.1‐2017, Section 8.2,
                     Internationalization Variables for the precedence of
                     internationalization variables used to determine the
                     values of locale categories.)
           LC_ALL    If set to a non-empty string value, override the values
                     of all the other internationalization variables.
           LC_CTYPE  Determine the locale for the interpretation of
                     sequences of bytes of text data as characters (for
                     example, single-byte as opposed to multi-byte
                     characters in arguments).
           LC_MESSAGES
                     Determine the locale that should be used to affect the
                     format and contents of diagnostic messages written to
                     standard error.
           NLSPATH   Determine the location of message catalogs for the
                     processing of LC_MESSAGES.
           PATH      Determine the location of utility, as described in the
                     Base Definitions volume of POSIX.1‐2017, Chapter 8,
                     Environment Variables.
## ASYNCHRONOUS EVENTS         top
           Default.
## STDOUT         top
           The standard output of hash shall be used when no arguments are
           specified. Its format is unspecified, but includes the pathname
           of each utility in the list of remembered locations for the
           current shell environment. This list shall consist of those
           utilities named in previous hash invocations that have been
           invoked, and may contain those invoked and found through the
           normal command search process.
## STDERR         top
           The standard error shall be used only for diagnostic messages.
## OUTPUT FILES         top
           None.
## EXTENDED DESCRIPTION         top
           None.
## EXIT STATUS         top
           The following exit values shall be returned:
            0    Successful completion.
           >0    An error occurred.
## CONSEQUENCES OF ERRORS         top
           Default.
           The following sections are informative.
## APPLICATION USAGE         top
           Since hash affects the current shell execution environment, it is
           always provided as a shell regular built-in. If it is called in a
           separate utility execution environment, such as one of the
           following:
               nohup hash -r
               find . -type f | xargs hash
           it does not affect the command search process of the caller's
           environment.
           The hash utility may be implemented as an alias—for example,
           alias -t -, in which case utilities found through normal command
           search are not listed by the hash command.
           The effects of hash -r can also be achieved portably by resetting
           the value of PATH; in the simplest form, this can be:
               PATH="$PATH"
           The use of hash with utility names is unnecessary for most
           applications, but may provide a performance improvement on a few
           implementations; normally, the hashing process is included by
           default.
## EXAMPLES         top
           None.
## RATIONALE         top
           None.
## FUTURE DIRECTIONS         top
           None.
## SEE ALSO         top
           Section 2.9.1.1, Command Search and Execution
           The Base Definitions volume of POSIX.1‐2017, Chapter 8,
           Environment Variables, Section 12.2, Utility Syntax Guidelines
## COPYRIGHT         top
           Portions of this text are reprinted and reproduced in electronic
           form from IEEE Std 1003.1-2017, Standard for Information
           Technology -- Portable Operating System Interface (POSIX), The
           Open Group Base Specifications Issue 7, 2018 Edition, Copyright
           (C) 2018 by the Institute of Electrical and Electronics
           Engineers, Inc and The Open Group.  In the event of any
           discrepancy between this version and the original IEEE and The
           Open Group Standard, the original IEEE and The Open Group
           Standard is the referee document. The original Standard can be
           obtained online at http://www.opengroup.org/unix/online.html .
           Any typographical or formatting errors that appear in this page
           are most likely to have been introduced during the conversion of
           the source files to man page format. To report such errors, see
           https://www.kernel.org/doc/man-pages/reporting_bugs.html .
    IEEE/The Open Group               2017                          HASH(1P)
* * *
Pages that refer to this page: set(1p),  type(1p)
* * *
* * *
HTML rendering created 2023-06-24 by Michael Kerrisk, author of The Linux
Programming Interface.
For details of in-depth Linux/UNIX system programming training courses that I
teach, look here.
Hosting by jambit GmbH.  
* * *