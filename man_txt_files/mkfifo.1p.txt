man7.org > Linux > man-pages
Linux/UNIX system programming training  
* * *
# mkfifo(1p) -- Linux manual page
PROLOG | NAME | SYNOPSIS | DESCRIPTION | OPTIONS | OPERANDS | STDIN | INPUT
FILES | ENVIRONMENT VARIABLES | ASYNCHRONOUS EVENTS | STDOUT | STDERR | OUTPUT
FILES | EXTENDED DESCRIPTION | EXIT STATUS | CONSEQUENCES OF ERRORS |
APPLICATION USAGE | EXAMPLES | RATIONALE | FUTURE DIRECTIONS | SEE ALSO |
COPYRIGHT  
    MKFIFO(1P)              POSIX Programmer's Manual             MKFIFO(1P)
## PROLOG         top
           This manual page is part of the POSIX Programmer's Manual.  The
           Linux implementation of this interface may differ (consult the
           corresponding Linux manual page for details of Linux behavior),
           or the interface may not be implemented on Linux.
## NAME         top
           mkfifo — make FIFO special files
## SYNOPSIS         top
           mkfifo [-m mode] file...
## DESCRIPTION         top
           The mkfifo utility shall create the FIFO special files specified
           by the operands, in the order specified.
           For each file operand, the mkfifo utility shall perform actions
           equivalent to the mkfifo() function defined in the System
           Interfaces volume of POSIX.1‐2017, called with the following
           arguments:
            1. The file operand is used as the path argument.
            2. The value of the bitwise-inclusive OR of S_IRUSR, S_IWUSR,
               S_IRGRP, S_IWGRP, S_IROTH, and S_IWOTH is used as the mode
               argument. (If the -m option is specified, the value of the
               mkfifo() mode argument is unspecified, but the FIFO shall at
               no time have permissions less restrictive than the -m mode
               option-argument.)
## OPTIONS         top
           The mkfifo utility shall conform to the Base Definitions volume
           of POSIX.1‐2017, Section 12.2, Utility Syntax Guidelines.
           The following option shall be supported:
           -m mode   Set the file permission bits of the newly-created FIFO
                     to the specified mode value. The mode option-argument
                     shall be the same as the mode operand defined for the
                     chmod utility. In the symbolic_mode strings, the op
                     characters '+' and '-' shall be interpreted relative to
                     an assumed initial mode of a=rw.
## OPERANDS         top
           The following operand shall be supported:
           file      A pathname of the FIFO special file to be created.
## STDIN         top
           Not used.
## INPUT FILES         top
           None.
## ENVIRONMENT VARIABLES         top
           The following environment variables shall affect the execution of
           mkfifo:
           LANG      Provide a default value for the internationalization
                     variables that are unset or null. (See the Base
                     Definitions volume of POSIX.1‐2017, Section 8.2,
                     Internationalization Variables for the precedence of
                     internationalization variables used to determine the
                     values of locale categories.)
           LC_ALL    If set to a non-empty string value, override the values
                     of all the other internationalization variables.
           LC_CTYPE  Determine the locale for the interpretation of
                     sequences of bytes of text data as characters (for
                     example, single-byte as opposed to multi-byte
                     characters in arguments).
           LC_MESSAGES
                     Determine the locale that should be used to affect the
                     format and contents of diagnostic messages written to
                     standard error.
           NLSPATH   Determine the location of message catalogs for the
                     processing of LC_MESSAGES.
## ASYNCHRONOUS EVENTS         top
           Default.
## STDOUT         top
           Not used.
## STDERR         top
           The standard error shall be used only for diagnostic messages.
## OUTPUT FILES         top
           None.
## EXTENDED DESCRIPTION         top
           None.
## EXIT STATUS         top
           The following exit values shall be returned:
            0    All the specified FIFO special files were created
                 successfully.
           >0    An error occurred.
## CONSEQUENCES OF ERRORS         top
           Default.
           The following sections are informative.
## APPLICATION USAGE         top
           None.
## EXAMPLES         top
           None.
## RATIONALE         top
           This utility was added to permit shell applications to create
           FIFO special files.
           The -m option was added to control the file mode, for consistency
           with the similar functionality provided by the mkdir utility.
           Early proposals included a -p option similar to the mkdir -p
           option that created intermediate directories leading up to the
           FIFO specified by the final component. This was removed because
           it is not commonly needed and is not common practice with similar
           utilities.
           The functionality of mkfifo is described substantially through a
           reference to the mkfifo() function in the System Interfaces
           volume of POSIX.1‐2017. For example, by default, the mode of the
           FIFO file is affected by the file mode creation mask in
           accordance with the specified behavior of the mkfifo() function.
           In this way, there is less duplication of effort required for
           describing details of the file creation.
## FUTURE DIRECTIONS         top
           None.
## SEE ALSO         top
           chmod(1p), umask(1p)
           The Base Definitions volume of POSIX.1‐2017, Chapter 8,
           Environment Variables, Section 12.2, Utility Syntax Guidelines
           The System Interfaces volume of POSIX.1‐2017, mkfifo(3p)
## COPYRIGHT         top
           Portions of this text are reprinted and reproduced in electronic
           form from IEEE Std 1003.1-2017, Standard for Information
           Technology -- Portable Operating System Interface (POSIX), The
           Open Group Base Specifications Issue 7, 2018 Edition, Copyright
           (C) 2018 by the Institute of Electrical and Electronics
           Engineers, Inc and The Open Group.  In the event of any
           discrepancy between this version and the original IEEE and The
           Open Group Standard, the original IEEE and The Open Group
           Standard is the referee document. The original Standard can be
           obtained online at http://www.opengroup.org/unix/online.html .
           Any typographical or formatting errors that appear in this page
           are most likely to have been introduced during the conversion of
           the source files to man page format. To report such errors, see
           https://www.kernel.org/doc/man-pages/reporting_bugs.html .
    IEEE/The Open Group               2017                        MKFIFO(1P)
* * *
* * *
HTML rendering created 2023-06-24 by Michael Kerrisk, author of The Linux
Programming Interface.
For details of in-depth Linux/UNIX system programming training courses that I
teach, look here.
Hosting by jambit GmbH.  
* * *