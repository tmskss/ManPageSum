man7.org > Linux > man-pages
Linux/UNIX system programming training  
* * *
# git-mktag(1) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | OPTIONS | TAG FORMAT | GIT | COLOPHON  
    GIT-MKTAG(1)                   Git Manual                   GIT-MKTAG(1)
## NAME         top
           git-mktag - Creates a tag object with extra validation
## SYNOPSIS         top
           git mktag
## DESCRIPTION         top
           Reads a tag contents on standard input and creates a tag object.
           The output is the new tag’s <object> identifier.
           This command is mostly equivalent to git-hash-object(1) invoked
           with -t tag -w --stdin. I.e. both of these will create and write
           a tag found in my-tag:
               git mktag <my-tag
               git hash-object -t tag -w --stdin <my-tag
           The difference is that mktag will die before writing the tag if
           the tag doesn’t pass a git-fsck(1) check.
           The "fsck" check done mktag is stricter than what git-fsck(1)
           would run by default in that all fsck.<msg-id> messages are
           promoted from warnings to errors (so e.g. a missing "tagger" line
           is an error).
           Extra headers in the object are also an error under mktag, but
           ignored by git-fsck(1). This extra check can be turned off by
           setting the appropriate fsck.<msg-id> variable:
               git -c fsck.extraHeaderEntry=ignore mktag <my-tag-with-headers
## OPTIONS         top
           --strict
               By default mktag turns on the equivalent of git-fsck(1)
               --strict mode. Use --no-strict to disable it.
## TAG FORMAT         top
           A tag signature file, to be fed to this command’s standard input,
           has a very simple fixed format: four lines of
               object <hash>
               type <typename>
               tag <tagname>
               tagger <tagger>
           followed by some optional free-form message (some tags created by
           older Git may not have tagger line). The message, when it exists,
           is separated by a blank line from the header. The message part
           may contain a signature that Git itself doesn’t care about, but
           that can be verified with gpg.
## GIT         top
           Part of the git(1) suite
## COLOPHON         top
           This page is part of the git (Git distributed version control
           system) project.  Information about the project can be found at
           ⟨http://git-scm.com/⟩.  If you have a bug report for this manual
           page, see ⟨http://git-scm.com/community⟩.  This page was obtained
           from the project's upstream Git repository
           ⟨https://github.com/git/git.git⟩ on 2023-06-23.  (At that time,
           the date of the most recent commit that was found in the
           repository was 2023-06-22.)  If you discover any rendering
           problems in this HTML version of the page, or you believe there
           is a better or more up-to-date source for the page, or you have
           corrections or improvements to the information in this COLOPHON
           (which is not part of the original manual page), send a mail to
           man-pages@man7.org
    Git 2.41.0.159.g0bfa46         2023-06-22                   GIT-MKTAG(1)
* * *
Pages that refer to this page: git(1),  git-merge-tree(1)
* * *
* * *
HTML rendering created 2023-06-24 by Michael Kerrisk, author of The Linux
Programming Interface.
For details of in-depth Linux/UNIX system programming training courses that I
teach, look here.
Hosting by jambit GmbH.  
* * *