man7.org > Linux > man-pages
Linux/UNIX system programming training  
* * *
# pcp-mpstat(1) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | OPTIONS | EXAMPLES | NOTES | ENVIRONMENT | PCP
ENVIRONMENT | SEE ALSO | COLOPHON  
    PCP-MPSTAT(1)            General Commands Manual           PCP-MPSTAT(1)
## NAME         top
           pcp-mpstat - Report CPU and interrupt related statistics.
## SYNOPSIS         top
           pcp [pcp options] mpstat [ -A ] [ -u ] [ -V ] [ -I { SUM | CPU |
           SCPU | ALL } ] [ -P { cpu1,cpu2 [,...] | ON | ALL } ] [ -t
           interval ] [ -s count ] [ -a archive ] [ -? ]
## DESCRIPTION         top
           pcp-mpstat command writes to standard output activities for each
           available processor, processor 0 being the first one.  If no
           activity/option has been selected, then the default report is the
           CPU utilization (-u) report.
           The interval parameter specifies the amount of time in seconds
           between each report.  The default is one second.  The value of
           count parameter determines the number of samples to be displayed.
           The default is continous.
## OPTIONS         top
           When invoked via the pcp(1) command, the -h/--host, -a/--archive,
           -O/--origin, -s/--samples, -t/--interval, -Z/--timezone and
           several other pcp options become indirectly available; refer to
           PCPIntro(1) for a complete description of these options.
           The additional command line options available for pcp-mpstat are:
           -A     This option is equivalent to specifying -u -I ALL -P ALL
           -I { SUM | CPU | SCPU | ALL }
                  Report interrupts statistics.
                  With the SUM keyword, the pcp-mpstat command reports the
                  total number of interrupts per processor.  The following
                  values are displayed:
           CPU
                         Processor number.  The keyword all indicates that
                         statistics are calculated as averages among all
                         processors.
                  intr/s
                         Show the total number of interrupts received per
                         second by the CPU or CPUs.
                  With the CPU keyword, the number of each individual
                  interrupt received per second by the CPU or CPUs is
                  displayed.  Interrupts are those under the
                  kernel.percpu.interrupts metric tree.
                  With the SCPU keyword, the number of each individual
                  software interrupt received per second by the CPU or CPUs
                  is displayed.  Software interrupts are those under the
                  kernel.percpu.softirqs tree
                  The ALL keyword is equivalent to specifying all the
                  keywords above and therefore all the interrupts statistics
                  are displayed.
           -P { cpu1,cpu2[,...] | ON | ALL }
                  Indicate the processor number for which statistics are to
                  be reported.  cpu1 and cpu2 are the processor numbers.  A
                  list of required processor numbers can be provided.  Note
                  that processor 0 is the first processor.
                  The ON keyword indicates that statistics are to be
                  reported for every online processor, whereas the ALL
                  keyword indicates that statistics are to be reported for
                  all processors.
           -u     Report CPU utilization.  The following values are
                  displayed:
                  CPU
                         Processor number.  The keyword ALL indicates that
                         statistics are calculated as averages among all
                         processors.
                  %usr
                         Show the percentage of CPU utilization that
                         occurred while executing at the user level
                         (application).
                  %nice
                         Show the percentage of CPU utilization that
                         occurred while executing at the user level with
                         nice priority.
                  %sys
                         Show the percentage of CPU utilization that
                         occurred while executing at the system level
                         (kernel).  Note that this does not include time
                         spent servicing hardware and software interrupts.
                  %iowait
                         Show the percentage of time that the CPU or CPUs
                         were idle during which the system had an
                         outstanding disk I/O request.
                  %irq
                         Show the percentage of time spent by the CPU or
                         CPUs to service hardware interrupts.
                  %soft
                         Show the percentage of time spent by the CPU or
                         CPUs to service software interrupts.
                  %steal
                         Show the percentage of time spent in involuntary
                         wait by the virtual CPU or CPUs while the
                         hypervisor was servicing another virtual processor.
                  %guest
                         Show the percentage of time spent by the CPU or
                         CPUs to run a virtual processor.
                  %gnice
                         Show the percentage of time spent by the CPU or
                         CPUs to run a niced guest.
                  %idle
                         Show the percentage of time that the CPU or CPUs
                         were idle and the system did not have an
                         outstanding disk I/O request.
                  Note: On SMP machines a processor that does not have any
                  activity at all is a disabled (offline) processor.
           -s  N , --samples = N
                  Set the number of samples to be displayed.  Since the
                  first sample is used for the rate conversion of some of
                  the metrics, the total number of samples reported are one
                  less that N.  Default is continous.
           -t DELTA , --interval = DELTA
                  Set the interval between two samples.  The default is one
                  second.
           -a  FILE , --archive = FILE
                  Causes pcp-mpstat to use the specified archive than
                  connecting to PMCD.  The argument to -a is a comma-
                  separated list of names, each of which may be the base
                  name of an archive or the name of a directory containing
                  one or more archives.
           -V , --version
                  Print version number then exit.
           -? , --help
                  Print usage message then exit.
## EXAMPLES         top
           pcp-mpstat -t 2 -s 5
                  Display four reports of global statistics among all
                  processors at two second intervals.
           pcp mpstat -P ALL -t 2 -s 5
                  Display four reports of statistics for all processors at
                  two second intervals.
## NOTES         top
           pcp-mpstat is inspired by the mpstat(1) command and aims to be
           command line and output compatible with it.
## ENVIRONMENT         top
           TZ and LC_TIME environment variables can be used to override the
           default date display format for pcp-mpstat.
## PCP ENVIRONMENT         top
           Environment variables with the prefix PCP_ are used to
           parameterize the file and directory names used by PCP.  On each
           installation, the file /etc/pcp.conf contains the local values
           for these variables.  The $PCP_CONF variable may be used to
           specify an alternative configuration file, as described in
           pcp.conf(5).
           For environment variables affecting PCP tools, see
           pmGetOptions(3).
## SEE ALSO         top
           PCPIntro(1), pcp(1), mpstat(1), pmParseInterval(3),
           pmTraversePMNS(3) and environ(7).
## COLOPHON         top
           This page is part of the PCP (Performance Co-Pilot) project.
           Information about the project can be found at 
           ⟨http://www.pcp.io/⟩.  If you have a bug report for this manual
           page, send it to pcp@groups.io.  This page was obtained from the
           project's upstream Git repository
           ⟨https://github.com/performancecopilot/pcp.git⟩ on 2023-06-23.
           (At that time, the date of the most recent commit that was found
           in the repository was 2023-06-21.)  If you discover any rendering
           problems in this HTML version of the page, or you believe there
           is a better or more up-to-date source for the page, or you have
           corrections or improvements to the information in this COLOPHON
           (which is not part of the original manual page), send a mail to
           man-pages@man7.org
    Performance Co-Pilot               PCP                     PCP-MPSTAT(1)
* * *
* * *
HTML rendering created 2023-06-24 by Michael Kerrisk, author of The Linux
Programming Interface.
For details of in-depth Linux/UNIX system programming training courses that I
teach, look here.
Hosting by jambit GmbH.  
* * *