man7.org > Linux > man-pages
Linux/UNIX system programming training  
* * *
# env(1) -- Linux manual page
NAME | SYNOPSIS | DESCRIPTION | OPTIONS | NOTES | AUTHOR | REPORTING BUGS |
COPYRIGHT | SEE ALSO | COLOPHON  
    ENV(1)                        User Commands                       ENV(1)
## NAME         top
           env - run a program in a modified environment
## SYNOPSIS         top
           env [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]
## DESCRIPTION         top
           Set each NAME to VALUE in the environment and run COMMAND.
           Mandatory arguments to long options are mandatory for short
           options too.
           -i, --ignore-environment
                  start with an empty environment
           -0, --null
                  end each output line with NUL, not newline
           -u, --unset=NAME
                  remove variable from the environment
           -C, --chdir=DIR
                  change working directory to DIR
           -S, --split-string=S
                  process and split S into separate arguments; used to pass
                  multiple arguments on shebang lines
           --block-signal[=SIG]
                  block delivery of SIG signal(s) to COMMAND
           --default-signal[=SIG]
                  reset handling of SIG signal(s) to the default
           --ignore-signal[=SIG]
                  set handling of SIG signal(s) to do nothing
           --list-signal-handling
                  list non default signal handling to stderr
           -v, --debug
                  print verbose information for each processing step
           --help display this help and exit
           --version
                  output version information and exit
           A mere - implies -i.  If no COMMAND, print the resulting
           environment.
           SIG may be a signal name like 'PIPE', or a signal number like
           '13'.  Without SIG, all known signals are included.  Multiple
           signals can be comma-separated.  An empty SIG argument is a
           no-op.
       Exit status:
           125    if the env command itself fails
           126    if COMMAND is found but cannot be invoked
           127    if COMMAND cannot be found
           -      the exit status of COMMAND otherwise
## OPTIONS         top
       -S/--split-string usage in scripts
           The -S option allows specifying multiple parameters in a script.
           Running a script named 1.pl containing the following first line:
                  #!/usr/bin/env -S perl -w -T
                  ...
           Will execute perl -w -T 1.pl .
           Without the '-S' parameter the script will likely fail with:
                  /usr/bin/env: 'perl -w -T': No such file or directory
           See the full documentation for more details.
       --default-signal[=SIG] usage
           This option allows setting a signal handler to its default
           action, which is not possible using the traditional shell trap
           command.  The following example ensures that seq will be
           terminated by SIGPIPE no matter how this signal is being handled
           in the process invoking the command.
                  sh -c 'env --default-signal=PIPE seq inf | head -n1'
## NOTES         top
           POSIX's exec(3p) pages says:
                  "many existing applications wrongly assume that they start
                  with certain signals set to the default action and/or
                  unblocked.... Therefore, it is best not to block or ignore
                  signals across execs without explicit reason to do so, and
                  especially not to block signals across execs of arbitrary
                  (not closely cooperating) programs."
## AUTHOR         top
           Written by Richard Mlynarik, David MacKenzie, and Assaf Gordon.
## REPORTING BUGS         top
           GNU coreutils online help:
           <https://www.gnu.org/software/coreutils/>
           Report any translation bugs to
           <https://translationproject.org/team/>
## COPYRIGHT         top
           Copyright © 2023 Free Software Foundation, Inc.  License GPLv3+:
           GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
           This is free software: you are free to change and redistribute
           it.  There is NO WARRANTY, to the extent permitted by law.
## SEE ALSO         top
           sigaction(2), sigprocmask(2), signal(7)
           Full documentation <https://www.gnu.org/software/coreutils/env>
           or available locally via: info '(coreutils) env invocation'
## COLOPHON         top
           This page is part of the coreutils (basic file, shell and text
           manipulation utilities) project.  Information about the project
           can be found at ⟨http://www.gnu.org/software/coreutils/⟩.  If you
           have a bug report for this manual page, see
           ⟨http://www.gnu.org/software/coreutils/⟩.  This page was obtained
           from the tarball coreutils-9.3.tar.xz fetched from
           ⟨http://ftp.gnu.org/gnu/coreutils/⟩ on 2023-06-23.  If you
           discover any rendering problems in this HTML version of the page,
           or you believe there is a better or more up-to-date source for
           the page, or you have corrections or improvements to the
           information in this COLOPHON (which is not part of the original
           manual page), send a mail to man-pages@man7.org
    GNU coreutils 9.3              April 2023                         ENV(1)
* * *
Pages that refer to this page: pmpython(1),  environ(7)
* * *
* * *
HTML rendering created 2023-06-24 by Michael Kerrisk, author of The Linux
Programming Interface.
For details of in-depth Linux/UNIX system programming training courses that I
teach, look here.
Hosting by jambit GmbH.  
* * *